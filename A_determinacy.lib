proc Adet(list X, ideal E, ideal N, module TRnf, list Q)
{
	int i,j,k,l,m;

	list Lg;
	module mkE;
	module HJ0;
	list L = list(list(HJ0,list(list(E,N))));
	list Ln;

	int degAdet = 0;
	int Adet;
	list Ld;
	list LAdet;
	ideal Ej, Nj;
	module M1;
	while(size(L) != 0){
		Ld = list();
		Ln = list();
		for(i=1;i<=size(L);i++){
			module HJi = L[i][1];
			for(j=1;j<=size(L[i][2]);j++){
				Ej = L[i][2][j][1];
				Ej = radical_ideal(Ej);
				Nj = L[i][2][j][2];

				M1 = TRnf + zero*freemodule(ny) + mx^(degAdet+1)*my*freemodule(ny)+mx^(2*degAdet+2)*freemodule(ny);
				mkE = mx^(degAdet+1)*freemodule(ny);
				Lg = local_cohomology_mixed_s(X,Ej,Nj,M1,Q,HJi);
				// test
				print("degAdet ="), degAdet;
				Lg;

				for(k=1;k<=size(Lg);k++){
					Adet = 1;
					for(l=degAdet+1;l<=2*degAdet+1;l++){
						mkE = mx^l*freemodule(ny);
						for(m=1;m<=ncols(mkE);m++){
							mkE[m] = reduce_cohom(mkE[m],Lg[k][3]);
							if(mkE[m] != 0){
								mkE[m] = elimdenom(mkE[m]);
								mkE[m] = reduction_by_ideal(module(mkE[m]),E)[1];
								if(mkE[m] != 0){
									Adet = 0;
									break;
								}
							}
						}
					}
					if(Adet == 1){
						print("the map germ is"), degAdet, print("-determined!");
						print("E :");
						Lg[k][1];
						print("N :");
						Lg[k][2];

						Ld = insert(Ld,list(Lg[k][1],Lg[k][2]));
					}
					else{
						Ln = insert(Ln,list(Lg[k][3],list(list(Lg[k][1],Lg[k][2]))));
					}
				}
			}
			kill HJi;
		}
		if(size(Ld) != 0){
			LAdet = insert(LAdet,list(degAdet,Ld));
		}
		L = Ln;

		degAdet++;
	}
	return(LAdet);
}
