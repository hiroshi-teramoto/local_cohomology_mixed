LIB "teachstd.lib";
LIB "polylib.lib";
LIB "ainvar.lib";
LIB "crypto.lib";
LIB "zeroset.lib";
LIB "redcgs.lib";

LIB "A_determinacy.lib";
LIB "inverse_ring.lib";
LIB "local_cohomology_mixed.lib";
LIB "associative_container.lib";
newstruct("ass_con","list keys, list values");

LIB "related_terms.lib";
LIB "addcons.lib";
LIB "cgs.lib";
LIB "check_zeros.lib";
LIB "simplify_constructible.lib";
LIB "combine_locally_closed.lib";
// LIB "subtract_locally_closed.lib";

int nx = 2;
int ny = 2;
int i,j,k,l,m;
intmat imat[nx+ny][nx+ny];
for(i=1;i<=nx+ny;i++){
	imat[1,i] = -1;
}
for(i=1;i<=ny;i++){
	imat[i+1,ny+nx-i+1] = 1;
}
for(i=1;i<=nx-1;i++){
	imat[i+ny+1,nx-i+1] = 1;
}
ring R = (0,a,b), (x(1..nx),y(1..ny)), (ws(1,1,1,2),c);
// ring R = 0, (x(1..nx),y(1..ny)), (ws(1,1,1,2),c);
list X = list();
X[1] = ideal(y(1..ny));

ideal E = 0;
ideal N = 1;

poly f(1..ny);
// 1
/*
f(1) = x(1);
f(2) = x(2);
*/

// 2
f(1) = x(1);
f(2) = x(2)^2;

// 3
/*
f(1) = x(1);
f(2) = x(2)^3+x(1)*x(2);
*/

// 4 
/*
f(1) = x(1);
f(2) = x(2)^3+x(1)^2*x(2);
*/

// 5 
/*
f(1) = x(1);
f(2) = x(2)^4+x(1)*x(2);
*/

// 6
/*
f(1) = x(1);
f(2) = x(2)^5+x(2)^7+x(1)*x(2);
*/

// 7
/*
f(1) = x(1);
f(2) = x(2)^5+x(1)*x(2);
*/

// 8 
/*
f(1) = x(1);
f(2) = x(2)^6+x(2)^8+a*x(2)^9+x(1)*x(2);
*/

// 9 
/*
f(1) = x(1);
f(2) = x(2)^6+x(2)^9+x(1)*x(2);
*/

// 10
/*
f(1) = x(1);
f(2) = x(2)^7+x(2)^9+a*x(2)^10+b*x(2)^11+x(1)*x(2);
*/

// 11
/*
f(1) = x(1);
f(2) = x(2)^4+x(2)^9+x(1)*x(2)^2;
*/

vector f;
for(i=1;i<=ny;i++){
	f = f + f(i)*gen(i);
}

ideal mx = x(1..nx);
ideal my = y(1..ny);

module TR1f;
for(i=1;i<=nx;i++){
	TR1f = TR1f, diff(f,x(i));
}
TR1f = mx^2*TR1f;

module TRnf = TR1f;
for(i=1;i<=nx;i++){
	for(j=1;j<=i-1;j++){
		TRnf = TRnf, x(j)*diff(f,x(i));
	}
} 

ideal zero;
for(i=1;i<=ny;i++){
	zero = zero, y(i)-f[i];
}
zero = compress(zero);

list Q;
Q[1] = my^2*freemodule(ny);
// add some nilpotent parts
for(i=1;i<=ny;i++){
	for(j=1;j<=i-1;j++){
		Q[1] = Q[1], y(j)*gen(i);
	}
}

system("--ticks-per-sec",1000);
rtimer=1;
int t=rtimer;
list LAdet = Adet(X,E,N,TRnf,Q);
rtimer-t;

// display the results
print("results for A-determinacy degree");
LAdet;

quit;
